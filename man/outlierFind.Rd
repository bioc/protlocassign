% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OutlierFind.R
\name{outlierFind}
\alias{outlierFind}
\title{Identify outlier profiles}
\usage{
outlierFind(
  protClass,
  outlierLevel = "peptide",
  numRefCols = 5,
  numDataCols = 9,
  outlierMeth = "boxplot",
  range = 3,
  proba = 0.99,
  eps = eps,
  randomError = TRUE,
  setSeed = NULL,
  cpus = 1
)
}
\arguments{
\item{protClass}{a data frame containing profiles associated 
with either spectra or peptides (see Tutorial 6)}

\item{outlierLevel}{'peptide' for outlier spectra within peptides, or
'protein' for outlier peptides within proteins}

\item{numRefCols}{number of columns (variables) before data columns}

\item{numDataCols}{number of fractions in each profile}

\item{outlierMeth}{boxplot (recommended), scores, or 
none (if no outliers are to be reported)}

\item{range}{the range parameter used for identifying outliers 
using the boxplot method}

\item{proba}{probability to exclude outlier for scores method}

\item{eps}{small value to add so that log argument is greater than zero}

\item{randomError}{TRUE if allow it to be random}

\item{setSeed}{seed for random number generator}

\item{cpus}{1 (default);
if cpus > 1 use BiocParallel with SnowParm(cpus)}
}
\value{
New data frame with an additional column of indicators 
          of outlier status
}
\description{
Identify outlier profiles.  This can be done at the level of 
    identifying outlier spectra when calculating peptide profiles or 
    identifying outlier peptides when calculating protein profiles. 
    See tutorial 6 for a description of outlier determination methods.
}
\examples{
set.seed(17356)
eps <- 0.029885209
data(spectraNSA_test)
flagSpectraBox <- outlierFind(protClass=spectraNSA_test,
                              outlierLevel='peptide', numRefCols=5,
                              numDataCols=9,
                              outlierMeth='boxplot', range=3, eps=eps,
                              randomError=TRUE, cpus=2)
                              
# examine numbers of spectra that are outliers
table(flagSpectraBox$outlier.num.spectra)

}
